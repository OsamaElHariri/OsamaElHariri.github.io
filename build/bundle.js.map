{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/ContactSection.svelte","../../node_modules/svelte/store/index.mjs","../../src/stores/panelStore.js","../../src/components/Divider.svelte","../../src/components/Padding.svelte","../../src/components/PanelFooter.svelte","../../src/components/PanelMain.svelte","../../src/components/ListPanel.svelte","../../src/components/Title.svelte","../../src/components/ContentSection.svelte","../../src/components/InteractableText.svelte","../../src/components/TextureShape.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n    export let variant;\n</script>\n\n<div class=\"{variant} contact-section\">\n    <a href=\"https://www.linkedin.com/in/osamaelhariri/\">\n        <div class=\"contact-circle secondary-contact-color social-circle\">\n            <i class=\"fab fa-linkedin fa-2x\" />\n            <div class=\"title-text\">LinkedIn</div>\n        </div>\n    </a>\n\n    <a href=\"https://github.com/OsamaElHariri\">\n        <div class=\"contact-circle primary-contact-color code-circle\">\n            <i class=\"fab fa-github fa-2x\" />\n            <div class=\"title-text\">GitHub</div>\n        </div>\n    </a>\n\n    <a href=\"mailto:osama.hariri.dev@gmail.com\">\n        <div class=\"contact-circle secondary-contact-color mail-circle\">\n            <i class=\"fas fa-envelope fa-2x\" />\n            <div class=\"title-text\">Email</div>\n        </div>\n    </a>\n</div>\n\n<style>\n    .contact-section {\n        position: relative;\n        width: 100%;\n\n        display: flex;\n        align-items: baseline;\n        justify-content: space-around;\n        flex-wrap: wrap;\n    }\n\n    .contact-section a {\n        margin: 12px;\n        text-decoration: none;\n    }\n\n    .contact-circle {\n        position: relative;\n        border-radius: 100%;\n\n        width: 160px;\n        height: 160px;\n\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        cursor: pointer;\n\n        color: #fffbf5;\n    }\n\n    .primary-contact-color {\n        background-color: #db2955;\n    }\n\n    .secondary-contact-color {\n        background-color: #499167;\n    }\n\n    .contact-circle:hover {\n        animation: bounce 0.4s ease-out forwards;\n    }\n\n    .contact-circle div {\n        padding-top: 12px;\n    }\n\n    .contact-section.tiny .contact-circle {\n        width: 60px;\n        height: 60px;\n    }\n\n    .contact-section.tiny .title-text {\n        display: none;\n    }\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const panelOpen = writable(0);\nexport const panelClose = writable(0);","<script>\n    export let text = \"\";\n</script>\n\n<div class=\"divider-with-text\">\n    <div class=\"hr-chunk\">\n        <hr />\n    </div>\n    {#if text}\n        <div class=\"divider-text body-text\">{text}</div>\n        <div class=\"hr-chunk\">\n            <hr />\n        </div>\n    {/if}\n</div>\n\n<style>\n    .divider-with-text {\n        display: flex;\n        align-items: center;\n        text-align: center;\n        width: 65%;\n    }\n\n    .hr-chunk {\n        flex: 1;\n        position: relative;\n    }\n\n    hr {\n        width: 100%;\n    }\n\n    .divider-text {\n        padding: 0px 8px;\n    }\n</style>\n","<script>\n    export let vertical = 0;\n    export let horizontal = 0;\n</script>\n\n<div style=\"padding-top: {vertical}px; padding-left: {horizontal}px\" />\n","<script>\n    export let footerData;\n</script>\n\n{#if footerData.links}\n    <div class=\"footer-actions\">\n        {#each footerData.links as link, i}\n            <a on:click|stopPropagation href={link.url}>\n                <i class=\"{link.icon} fa-2x\" title={link.title} />\n            </a>\n        {/each}\n    </div>\n{:else}\n    <div class=\"overline-text secondary-text-color\">{footerData.text}</div>\n{/if}\n\n<style>\n    .footer-actions {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        width: 50%;\n    }\n\n    a {\n        color: #499167;\n    }\n\n    a:hover {\n        animation: bounce 0.4s ease-out forwards;\n    }\n</style>\n","<script>\n    export let data;\n</script>\n\n{#if data.image}\n    <img src={data.image} alt={data.imageAlt} />\n{:else}\n    <div class=\"header-text\">{data.text}</div>\n{/if}\n\n<style>\n    img {\n        height: 100px;\n    }\n</style>\n","<script>\n    import { onMount } from \"svelte\";\n    import { panelClose, panelOpen } from \"../stores/panelStore\";\n\n    import Divider from \"./Divider.svelte\";\n    import Padding from \"./Padding.svelte\";\n    import PanelFooter from \"./PanelFooter.svelte\";\n    import PanelMain from \"./PanelMain.svelte\";\n\n    export let activity;\n\n    let absolute = false;\n\n    let width;\n    let fixedWidth;\n\n    let height;\n    let fixedHeight;\n\n    let contracted = false;\n    let expanded = false;\n    let openId = 0;\n    let recentOpen = false;\n\n    panelOpen.subscribe((val) => {\n        recentOpen = val == openId;\n    });\n\n    function toggleExpandedAndNotify() {\n        toggleExpanded();\n        if (expanded)\n            panelOpen.update((n) => {\n                let val = n + 1;\n                openId = val;\n                return val;\n            });\n        else panelClose.update((n) => n + 1);\n    }\n\n    function toggleExpanded() {\n        expanded = !expanded;\n        contracted = !expanded;\n    }\n\n    panelClose.subscribe((_) => {\n        if (expanded) toggleExpanded();\n    });\n\n    onMount(async () => {\n        fixedHeight = height;\n        fixedWidth = width;\n        absolute = true;\n    });\n</script>\n\n<main\n    class:expanded\n    class:contracted\n    class:recent-open={recentOpen}\n    bind:clientHeight={height}\n    bind:clientWidth={width}\n    style=\"height: {fixedHeight}px; width: {fixedWidth}px;\"\n>\n    <div\n        class=\"panel-layout-color main-panel-container\"\n        class:absolute\n        on:click|stopPropagation={toggleExpandedAndNotify}\n    >\n        <div class=\"title-text\">{activity.title}</div>\n        <Divider text={activity.dividerText} />\n        <div class=\"subtitle secondary-text-color\">\n            <div class=\"body-text\">\n                {activity.subtitle}\n            </div>\n            {#if activity.subtitleLink && activity.subtitleLink.icon}\n                <Padding horizontal=\"8\" />\n                <a on:click|stopPropagation href={activity.subtitleLink.url}>\n                    <i\n                        class=\"{activity.subtitleLink\n                            .icon} fa-3x secondary-text-color\"\n                    />\n                </a>\n            {/if}\n        </div>\n        <Padding vertical=\"16\" />\n        <PanelMain data={activity.main} />\n        <Padding vertical=\"8\" />\n        <div class=\"more-info\">\n            <div class=\"more-info-text\">\n                <div>{activity.infoText}</div>\n                <Padding vertical=\"16\" />\n            </div>\n            <div class=\"more-info-fade\" />\n        </div>\n        <Padding vertical=\"4\" />\n        <PanelFooter footerData={activity.footer} />\n    </div>\n</main>\n\n<style>\n    @keyframes bounce-in {\n        0% {\n            transform: scale(1, 1);\n        }\n        15% {\n            transform: scale(0.75, 0.7);\n        }\n        40% {\n            transform: scale(0.75, 0.7);\n        }\n        55% {\n            transform: scale(1.1, 1.25);\n        }\n        70% {\n            transform: scale(1.1, 1.25);\n        }\n        90% {\n            transform: scale(0.97, 0.95);\n        }\n        100% {\n            transform: scale(1, 1);\n        }\n    }\n\n    @keyframes bounce-out {\n        0% {\n            transform: scale(1, 1);\n        }\n        30% {\n            transform: scale(1.05, 1.1);\n        }\n        45% {\n            transform: scale(0.8, 0.65);\n        }\n        55% {\n            transform: scale(0.8, 0.65);\n        }\n        85% {\n            transform: scale(1.01, 1.03);\n        }\n        100% {\n            transform: scale(1, 1);\n        }\n    }\n\n    main {\n        overflow: visible;\n        margin: 20px;\n        z-index: 1;\n    }\n\n    main.recent-open {\n        z-index: 2;\n    }\n\n    main.expanded {\n        z-index: 20;\n        animation: bounce-in 0.3s linear forwards;\n    }\n\n    main.contracted {\n        animation: bounce-out 0.3s linear forwards;\n    }\n\n    .absolute {\n        position: absolute;\n    }\n\n    .main-panel-container .title-text {\n        max-width: 80%;\n    }\n\n    .main-panel-container {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        text-align: center;\n\n        cursor: pointer;\n\n        text-align: center;\n        border-radius: 25px;\n        max-width: 360px;\n        min-width: 240px;\n        padding: 12px;\n\n        transition: transform 0.1s ease-in-out;\n        transition-delay: 0s;\n    }\n\n    :not(.expanded) .main-panel-container:hover {\n        transform: scale(0.96, 0.96);\n    }\n\n    .expanded .main-panel-container {\n        transform: translateY(-125px);\n        transition-delay: 0.15s;\n    }\n\n    .subtitle {\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .more-info {\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        box-sizing: border-box;\n        padding: 0px 32px;\n        height: 0px;\n        top: 0%;\n        transition: height 0.15s ease-out;\n        transition-delay: 0s;\n    }\n\n    .expanded .more-info {\n        height: 250px;\n        transition-delay: 0.13s;\n    }\n\n    .more-info-text {\n        height: 100%;\n        overflow-y: auto;\n    }\n\n    .more-info-fade {\n        position: absolute;\n        width: 100%;\n        bottom: 0px;\n        height: 20px;\n        background: linear-gradient(to top, #fffbf5ff 0%, #fffbf500 100%);\n    }\n\n    a {\n        font-size: 0.5em;\n    }\n\n    a:hover {\n        animation: bounce 0.4s ease-out forwards;\n    }\n</style>\n","<script>\n    export let title;\n</script>\n\n<div class=\"header-text panel-layout-color\">{title}</div>\n\n<style>\n    div {\n        position: relative;\n        display: inline-block;\n        padding: 12px 32px;\n        border-radius: 20px;\n        white-space: nowrap;\n    }\n</style>\n","<script>\n    import ListPanel from \"./ListPanel.svelte\";\n    import Padding from \"./Padding.svelte\";\n    import Title from \"./Title.svelte\";\n\n    export let content;\n\n    // https://stackoverflow.com/a/4312956\n    function monthDiff(dateFrom, dateTo) {\n        return (\n            dateTo.getMonth() -\n            dateFrom.getMonth() +\n            12 * (dateTo.getFullYear() - dateFrom.getFullYear())\n        );\n    }\n\n    let contentActivites = content.activities.map((activity) => {\n        let endDateIsNow = false;\n        if (!activity.main) activity.main = {};\n        if (!activity.footer) activity.footer = {};\n        let startDate;\n        let endDate;\n        if (activity.data) {\n            if (activity.data.startDate)\n                startDate = new Date(activity.data.startDate);\n\n            if (activity.data.endDate) {\n                endDateIsNow = activity.data.endDate == \"present\";\n                endDate = endDateIsNow\n                    ? new Date()\n                    : new Date(activity.data.endDate);\n            }\n        }\n\n        if (startDate && endDate) {\n            if (!activity.subtitle) {\n                let diff = monthDiff(startDate, endDate);\n                let years = Math.floor(diff / 12);\n                let months = Math.floor(diff - years * 12);\n\n                activity.subtitle = \"\";\n                if (years > 0) {\n                    activity.subtitle = `${years} year`;\n                    if (years > 1) activity.subtitle += 's';\n                }\n\n                if (months > 0) {\n                    if (activity.subtitle)\n                        activity.subtitle = `${activity.subtitle} `;\n\n                    activity.subtitle = `${activity.subtitle}${months} month`;\n                    if (months > 1) activity.subtitle += 's';\n                }\n            }\n            if (!activity.footer.text && !activity.footer.links) {\n                let startDateLocale = startDate.toLocaleDateString(\"en\", {\n                    year: \"numeric\",\n                    month: \"short\",\n                });\n                let endDateLocale = endDateIsNow\n                    ? \"present\"\n                    : endDate.toLocaleDateString(\"en\", {\n                          year: \"numeric\",\n                          month: \"short\",\n                      });\n                activity.footer.text = `${startDateLocale} - ${endDateLocale}`;\n            }\n        }\n\n        return activity;\n    });\n</script>\n\n<div>\n    <Title title={content.header} />\n    <Padding vertical=\"12\" />\n    <div class=\"content-list\">\n        {#each contentActivites as activity, i}\n            <div class=\"list-panel\">\n                <ListPanel {activity} />\n            </div>\n        {/each}\n    </div>\n</div>\n\n<style>\n    .content-list {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        flex-wrap: wrap;\n    }\n\n    .list-panel {\n        margin: 12px;\n    }\n</style>\n","<script>\n    export let text = \"\";\n    import { onDestroy, onMount } from \"svelte\";\n\n    const initialWaveStrength = 0.7;\n\n    const getWave = (initialStrength) => {\n        let strength = initialStrength;\n        let propagation = 0;\n        let deltaSum = 0;\n        return {\n            getRawStrength: () => strength,\n            getStrength: () => strength * Math.sin(propagation / 2),\n            update: (delta) => {\n                deltaSum += delta;\n                propagation +=  50 * delta;\n                strength = Math.max(0, initialStrength - (Math.pow(deltaSum, 2) * 4));\n            },\n        };\n    };\n\n    const wavePerLetter = text.split(\"\").map((_letter) => []);\n    let letterWaveStrength = text.split(\"\").map((_letter) => 0);\n\n    const updateLetterWaveStrength = (delta) => {\n        letterWaveStrength = wavePerLetter.map((waves, i) => {\n            let strength = 0;\n            let strengthMax = initialWaveStrength * 2;\n            waves.forEach((wave) => {\n                wave.update(delta);\n                strength +=\n                    (wave.getStrength() * (strength - strengthMax)) /\n                    strengthMax;\n            });\n            return strength;\n        });\n    };\n\n    const loopUpdate = (delta) => {\n        updateLetterWaveStrength(delta);\n    };\n\n    const removeDoneWaves = () => {\n        wavePerLetter.forEach((waves, i) => {\n            wavePerLetter[i] = wavePerLetter[i].filter(\n                (wave) => wave.getRawStrength() > 0.01\n            );\n        });\n    };\n\n    const carryOver = 0.6;\n    const propagateWave = (initialIndex, currentIndex, nextIndex) => {\n        let i = currentIndex;\n        if (i < 0 || i >= text.length) return;\n        const currentcarryOver = Math.pow(\n            carryOver,\n            Math.abs(initialIndex - i)\n        );\n        if (currentcarryOver < 0.1) return;\n        setTimeout(() => {\n            wavePerLetter[i].push(getWave(initialWaveStrength * currentcarryOver));\n            propagateWave(initialIndex, nextIndex(i), nextIndex);\n        }, 100);\n    };\n\n    const addWave = (index) => {\n        wavePerLetter[index].push(getWave(initialWaveStrength));\n        removeDoneWaves();\n\n        propagateWave(index, index + 1, (x) => x + 1);\n        propagateWave(index, index - 1, (x) => x - 1);\n    };\n\n    let animFrame;\n    let delta = 0;\n    let time = 0;\n    const animFrameloop = (animTime) => {\n        delta = (animTime - time) / 1000;\n        time = animTime;\n        animFrame = requestAnimationFrame(animFrameloop);\n        loopUpdate(delta || 1);\n    };\n\n    onMount(() => {\n        animFrameloop(0);\n    });\n\n    onDestroy(() => {\n        if (animFrame) cancelAnimationFrame(animFrame);\n    });\n</script>\n\n<div class=\"word\">\n    {#each text as letter, i}\n        <div\n            on:click={() => addWave(i)}\n            on:mouseenter={() => addWave(i)}\n            class=\"letter-wrapper\"\n        >\n            <div\n                class=\"letter\"\n                style=\"transform: scale({1 + 0.25 * letterWaveStrength[i]}, {1 +\n                    0.5 * -letterWaveStrength[i]})\"\n            >\n                {letter}\n            </div>\n        </div>\n    {/each}\n</div>\n\n<style>\n    .word {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        font-weight: bold;\n    }\n\n    .letter-wrapper {\n        padding: 0px 2px;\n    }\n\n    .letter {\n        font-size: 64px;\n        user-select: none;\n\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n    }\n    @media only screen and (min-width: 768px) {\n        .letter {\n            font-size: 120px;\n        }\n    }\n</style>\n","<script>\n    export let x;\n    export let y;\n    export let shiftOrigin = false;\n\n    let color = Math.random() < 0.5 ? \"#DB2955\" : \"#499167\";\n    let size = 100 + Math.random() * 30;\n</script>\n\n<div class=\"shape-wrapper\" style=\"top: {y};\n        left: {x};\">\n    <div\n        class=\"shape\"\n        class:shift-origin={shiftOrigin}\n        style=\"background-color: {color};\n        width: {size}px;\n        height: {size}px\"\n    />\n</div>\n\n<style>\n    .shape-wrapper {\n        position: absolute;\n    }\n\n    .shift-origin {\n        left: -100%;\n    }\n\n    .shape {\n        position: relative;\n        border-radius: 100%;\n    }\n\n    .shape-wrapper:hover .shape {\n        animation: bounce 0.4s ease-out forwards;\n    }\n</style>\n","<script>\n\timport ContactSection from \"./components/ContactSection.svelte\";\n\timport ContentSection from \"./components/ContentSection.svelte\";\n\timport InteractableText from \"./components/InteractableText.svelte\";\n\timport Padding from \"./components/Padding.svelte\";\n\timport TextureBackground from \"./components/TextureBackground.svelte\";\n\timport * as content from \"./content.json\";\n\timport { panelClose, panelOpen } from \"./stores/panelStore\";\n\n\tlet blurVisible = false;\n\n\tconst closePanel = () => {\n\t\tpanelClose.update((n) => n + 1);\n\t};\n\n\tpanelClose.subscribe((val) => {\n\t\tif (val) blurVisible = false;\n\t});\n\n\tpanelOpen.subscribe((val) => {\n\t\tif (val) blurVisible = true;\n\t});\n</script>\n\n<TextureBackground />\n<div\n\tclass=\"screen-fade main-background-color\"\n\tclass:blur-visible={blurVisible}\n\ton:click|stopPropagation={closePanel}\n/>\n<main>\n\t<Padding vertical=\"160\" />\n\t<div class=\"personal-info\">\n\t\t<InteractableText text=\"OSAMA\" />\n\t\t<ContactSection variant=\"tiny\" />\n\t\t<h2>Software Engineer</h2>\n\t</div>\n\t<div class=\"body-text about-text\">\n\t\tInterested in all things software. Especially interested in software at large scales and game \n\t\tdevelopment as well as new fields like machine learning and blockchain. I join hackathons\n\t\tand contribute to open source!\n\t</div>\n\t<Padding vertical=\"160\" />\n\n\t{#each content.overview as overview, i}\n\t\t<Padding vertical=\"28\" />\n\t\t<ContentSection content={overview} />\n\t\t<Padding vertical=\"28\" />\n\t{/each}\n\n\t<Padding vertical=\"160\" />\n\t<ContactSection />\n\t<Padding vertical=\"160\" />\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tmargin: 0 auto;\n\t}\n\n\t.personal-info {\n\t\tdisplay: inline-block;\n\t\tposition: relative;\n\t}\n\n\t.about-text {\n\t\tposition: relative;\n\t\tmax-width: 80%;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n\n\t@media only screen and (min-width: 768px) {\n\t\t.about-text {\n\t\t\tmax-width: 45%;\n\t\t}\n\t}\n\n\t.screen-fade {\n\t\tposition: fixed;\n\t\ttop: 0px;\n\t\tleft: 0px;\n\t\twidth: 200vw;\n\t\theight: 200vh;\n\n\t\tz-index: 0;\n\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t\ttransition: opacity 0.3s linear;\n\t}\n\n\t.blur-visible.screen-fade {\n\t\topacity: 0.85;\n\t\tpointer-events: all;\n\t\tz-index: 10;\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","stop_propagation","stopPropagation","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","crossorigin","current_component","is_crossorigin","undefined","window","parent","error","toggle_class","toggle","classList","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","bubble","callbacks","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","variant","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","subscribe","invalidate","subscriber","panelOpen","panelClose","vertical","horizontal","links","icon","title","url","footerData","image","imageAlt","subtitleLink","subtitle","infoText","dividerText","main","footer","getComputedStyle","position","iframe","tabIndex","unsubscribe","src","source","contentWindow","onload","width","fixedWidth","height","fixedHeight","activity","absolute","contracted","expanded","openId","recentOpen","toggleExpanded","val","_","n","header","content","contentActivites","activities","startDate","endDate","endDateIsNow","Date","diff","dateFrom","dateTo","getMonth","getFullYear","years","Math","floor","months","startDateLocale","toLocaleDateString","year","month","endDateLocale","getWave","initialStrength","strength","propagation","deltaSum","getRawStrength","getStrength","sin","delta","max","pow","wavePerLetter","split","_letter","letterWaveStrength","loopUpdate","waves","wave","initialWaveStrength","updateLetterWaveStrength","propagateWave","initialIndex","currentIndex","nextIndex","currentcarryOver","abs","setTimeout","addWave","x","animFrame","time","animFrameloop","animTime","requestAnimationFrame","cancelAnimationFrame","y","shiftOrigin","color","random","size","content.overview","blurVisible","body"],"mappings":"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"}